/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <32 31>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <27 33>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <25 41>;
        };
    };

    behaviors {
        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <POUND MINUS BACKSPACE UNDERSCORE>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53 54 55 56 57>;
            hold-trigger-on-release;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 55 56 57 58 59 54 53 52>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            flavor = "balanced";
        };

        hmlmo: hmlmo {
            compatible = "zmk,behavior-hold-tap";
            label = "HMLMO";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 55 56 57 58 59 54 53 52>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            flavor = "balanced";
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // swap C_MUTE & EQUAL for encoder on the right

        default_layer {
            display-name = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&gresc            &kp N1      &kp N2    &kp N3             &kp N4               &kp N5                           &kp N6  &kp N7               &kp N8             &kp N9      &kp N0         &kp PERIOD
&kp TAB           &kp Q       &kp W     &hmlmo 3 E         &kp R                &kp T                            &kp Y   &kp U                &kp I              &kp O       &kp P          &kp PERIOD
&kp LEFT_SHIFT    &kp A       &kp S     &hml LEFT_SHIFT D  &hml LEFT_COMMAND F  &kp G                            &kp H   &hmr LEFT_COMMAND J  &hmr LEFT_SHIFT K  &kp L       &kp SEMI       &kp BACKSPACE
&kp LEFT_COMMAND  &hmlmo 4 Z  &kp X     &kp C              &kp V                &kp B   &kp C_MUTE    &kp EQUAL  &kp N   &kp M                &kp COMMA          &kp DOT     &kp LS(COMMA)  &kp PERIOD
                              &kp LGUI  &kp LALT           &mo 3                &mo 2   &kp SPACE     &kp ENTER  &mo 1   &kp RCTRL            &kp LALT           &kp PERIOD
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        znaky {
            display-name = "znaky";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&none       &kp F1        &kp F2     &kp F3    &kp F4    &kp F5                     &kp F6          &kp F7        &kp F8        &kp F9         &kp F10         &kp F11
&caps_word  &kp NUMBER_1  &kp N2     &kp N3    &kp N4    &kp N5                     &kp CARET       &kp LS(RBKT)  &kp RBKT      &kp PERIOD     &kp PERIOD      &none
&none       &kp EXCL      &kp AT     &kp HASH  &kp DLLR  &kp PRCNT                  &kp MINUS       &kp LA(LBKT)  &kp LA(RBKT)  &kp LA(COMMA)  &kp LA(PERIOD)  &none
&none       &kp EQUAL     &kp MINUS  &kp PLUS  &kp LBRC  &kp RBRC   &none    &none  &kp UNDERSCORE  &kp LA(N9)    &kp LA(N0)    &bootloader    &none           &none
                          &none      &none     &none     &none      &none    &none  &none           &none         &none         &none
            >;

            sensor-bindings =
                <&inc_dec_kp LEFT_ARROW RIGHT_ARROW>,
                <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        raise_layer {
            display-name = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&trans  &trans        &trans              &trans         &trans         &trans                      &trans     &trans  &trans  &trans  &trans   &trans
&trans  &kp INS       &kp PSCRN           &kp K_CMENU    &trans         &trans                      &kp PG_UP  &trans  &kp UP  &trans  &kp N0   &trans
&trans  &kp LG(LEFT)  &kp LA(LEFT_ARROW)  &kp LA(RIGHT)  &kp LG(RIGHT)  &kp CLCK                    &kp PG_DN  &trans  &trans  &trans  &kp DEL  &kp BSPC
&trans  &kp K_UNDO    &kp K_CUT           &kp K_COPY     &kp K_PASTE    &trans    &trans    &trans  &trans     &trans  &trans  &trans  &trans   &trans
                      &trans              &trans         &trans         &trans    &trans    &trans  &trans     &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "adjust";
            bindings = <
&bt BT_CLR_ALL     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &none         &kp LA(TAB)   &kp LALT      &kp TAB       &studio_unlock                  &none  &none  &none  &none  &none  &none
&none              &none         &kp UP        &kp O         &none         &none                           &none  &none  &none  &none  &none  &none
&none              &kp LEFT      &kp DOWN      &kp RIGHT     &trans        &caps_word      &none    &none  &none  &none  &none  &none  &none  &none
                                 &none         &none         &trans        &trans          &none    &none  &none  &none  &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        numbers {
            bindings = <
&trans  &trans  &trans      &trans      &trans      &trans                           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &trans                           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &trans                           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans      &trans      &kp PLUS    &kp MINUS   &kp EQUAL    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
